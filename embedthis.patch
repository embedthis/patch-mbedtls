diff --git a/library/aes.c b/library/aes.c
index ec9313d..3713dbf 100644
--- a/library/aes.c
+++ b/library/aes.c
@@ -52,6 +52,10 @@
 #endif /* MBEDTLS_PLATFORM_C */
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#define FSb AESFSb
+#endif
+
 #if !defined(MBEDTLS_AES_ALT)
 
 /* Implementation that should never be optimized out by the compiler */
@@ -1487,4 +1491,8 @@ exit:
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#undef FSb
+#endif
+
 #endif /* MBEDTLS_AES_C */
diff --git a/library/arc4.c b/library/arc4.c
index ff0e993..ee47079 100644
--- a/library/arc4.c
+++ b/library/arc4.c
@@ -47,10 +47,12 @@
 
 #if !defined(MBEDTLS_ARC4_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 void mbedtls_arc4_init( mbedtls_arc4_context *ctx )
 {
diff --git a/library/asn1parse.c b/library/asn1parse.c
index b37523d..13f3e1a 100644
--- a/library/asn1parse.c
+++ b/library/asn1parse.c
@@ -43,10 +43,12 @@
 #define mbedtls_free       free
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * ASN.1 DER decoding routines
diff --git a/library/bignum.c b/library/bignum.c
index 15cbf73..404cc91 100644
--- a/library/bignum.c
+++ b/library/bignum.c
@@ -49,10 +49,12 @@
 #define mbedtls_free       free
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 #define ciL    (sizeof(mbedtls_mpi_uint))         /* chars in limb  */
 #define biL    (ciL << 3)               /* bits  in limb  */
diff --git a/library/blowfish.c b/library/blowfish.c
index 89be4d1..d0c6ea7 100644
--- a/library/blowfish.c
+++ b/library/blowfish.c
@@ -39,10 +39,12 @@
 
 #if !defined(MBEDTLS_BLOWFISH_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (big endian)
diff --git a/library/camellia.c b/library/camellia.c
index e015ca2..910b7ac 100644
--- a/library/camellia.c
+++ b/library/camellia.c
@@ -46,12 +46,18 @@
 #endif /* MBEDTLS_PLATFORM_C */
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#define FSb CAMELLIAFSb
+#endif
+
 #if !defined(MBEDTLS_CAMELLIA_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (big endian)
@@ -1069,4 +1075,8 @@ int mbedtls_camellia_self_test( int verbose )
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#undef FSb
+#endif
+
 #endif /* MBEDTLS_CAMELLIA_C */
diff --git a/library/ccm.c b/library/ccm.c
index 3463a0b..7c0acc2 100644
--- a/library/ccm.c
+++ b/library/ccm.c
@@ -49,10 +49,12 @@
 #endif /* MBEDTLS_PLATFORM_C */
 #endif /* MBEDTLS_SELF_TEST && MBEDTLS_AES_C */
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 #define CCM_ENCRYPT 0
 #define CCM_DECRYPT 1
diff --git a/library/cipher.c b/library/cipher.c
index ccc0685..37bc01a 100644
--- a/library/cipher.c
+++ b/library/cipher.c
@@ -49,10 +49,15 @@
 #define MBEDTLS_CIPHER_MODE_STREAM
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
+#if EMBEDTHIS
+#define supported_init cipher_supported_init
+#endif
 
 static int supported_init = 0;
 
@@ -883,4 +888,8 @@ int mbedtls_cipher_auth_decrypt( mbedtls_cipher_context_t *ctx,
 }
 #endif /* MBEDTLS_CIPHER_MODE_AEAD */
 
+#if EMBEDTHIS
+#undef supported_init
+#endif
+
 #endif /* MBEDTLS_CIPHER_C */
diff --git a/library/ctr_drbg.c b/library/ctr_drbg.c
index aefddfa..9bb4578 100644
--- a/library/ctr_drbg.c
+++ b/library/ctr_drbg.c
@@ -49,10 +49,12 @@
 #endif /* MBEDTLS_PLATFORM_C */
 #endif /* MBEDTLS_SELF_TEST */
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * CTR_DRBG context initialization
diff --git a/library/des.c b/library/des.c
index 61f214a..17b187c 100644
--- a/library/des.c
+++ b/library/des.c
@@ -48,10 +48,12 @@
 
 #if !defined(MBEDTLS_DES_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (big endian)
diff --git a/library/dhm.c b/library/dhm.c
index 0f4d316..bc27528 100644
--- a/library/dhm.c
+++ b/library/dhm.c
@@ -54,10 +54,12 @@
 #define mbedtls_free       free
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * helper to validate the mbedtls_mpi size and import it
diff --git a/library/ecp.c b/library/ecp.c
index 858540b..7a492ae 100644
--- a/library/ecp.c
+++ b/library/ecp.c
@@ -66,10 +66,12 @@
 #define inline __inline
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 #if defined(MBEDTLS_SELF_TEST)
 /*
diff --git a/library/entropy.c b/library/entropy.c
index cdbd35c..cde93e2 100644
--- a/library/entropy.c
+++ b/library/entropy.c
@@ -49,10 +49,12 @@
 #include "mbedtls/havege.h"
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 #define ENTROPY_MAX_LOOP    256     /**< Maximum amount to loop before error */
 
diff --git a/library/gcm.c b/library/gcm.c
index 4298254..3f3c6b3 100644
--- a/library/gcm.c
+++ b/library/gcm.c
@@ -77,10 +77,12 @@
 }
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * Initialize a context
diff --git a/library/havege.c b/library/havege.c
index 7623bc0..523d15e 100644
--- a/library/havege.c
+++ b/library/havege.c
@@ -39,10 +39,12 @@
 
 #include <string.h>
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /* ------------------------------------------------------------------------
  * On average, one iteration accesses two 8-word blocks in the havege WALK
diff --git a/library/hmac_drbg.c b/library/hmac_drbg.c
index bf5f9b5..ce88593 100644
--- a/library/hmac_drbg.c
+++ b/library/hmac_drbg.c
@@ -50,10 +50,12 @@
 #endif /* MBEDTLS_SELF_TEST */
 #endif /* MBEDTLS_PLATFORM_C */
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * HMAC_DRBG context initialization
diff --git a/library/md.c b/library/md.c
index eda98f6..ec41224 100644
--- a/library/md.c
+++ b/library/md.c
@@ -48,10 +48,12 @@
 #include <stdio.h>
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * Reminder: update profiles in x509_crt.c when adding a new hash!
diff --git a/library/md2.c b/library/md2.c
index 8976701..337035a 100644
--- a/library/md2.c
+++ b/library/md2.c
@@ -48,10 +48,12 @@
 
 #if !defined(MBEDTLS_MD2_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 static const unsigned char PI_SUBST[256] =
 {
diff --git a/library/md4.c b/library/md4.c
index 11a77e3..6aa3258 100644
--- a/library/md4.c
+++ b/library/md4.c
@@ -48,10 +48,12 @@
 
 #if !defined(MBEDTLS_MD4_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (little endian)
diff --git a/library/md5.c b/library/md5.c
index 5d972dc..f4b065e 100644
--- a/library/md5.c
+++ b/library/md5.c
@@ -47,10 +47,12 @@
 
 #if !defined(MBEDTLS_MD5_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (little endian)
@@ -401,4 +403,10 @@ int mbedtls_md5_self_test( int verbose )
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS || 1
+#undef F
+#undef P
+#undef S
+#endif
+
 #endif /* MBEDTLS_MD5_C */
diff --git a/library/memory_buffer_alloc.c b/library/memory_buffer_alloc.c
index b2c775a..0944948 100644
--- a/library/memory_buffer_alloc.c
+++ b/library/memory_buffer_alloc.c
@@ -42,10 +42,12 @@
 #include "mbedtls/threading.h"
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 #define MAGIC1       0xFF00AA55
 #define MAGIC2       0xEE119966
diff --git a/library/net.c b/library/net.c
index b892df9..4fe6e3e 100644
--- a/library/net.c
+++ b/library/net.c
@@ -52,6 +52,12 @@
 #endif
 #endif /* _MSC_VER */
 
+#if EMBEDTHIS
+    #undef read
+    #undef write
+    #undef close
+#endif
+
 #define read(fd,buf,len)        recv(fd,(char*)buf,(int) len,0)
 #define write(fd,buf,len)       send(fd,(char*)buf,(int) len,0)
 #define close(fd)               closesocket(fd)
@@ -572,4 +578,15 @@ void mbedtls_net_free( mbedtls_net_context *ctx )
     ctx->fd = -1;
 }
 
+#if (defined(_WIN32) || defined(_WIN32_WCE)) && !defined(EFIX64) && !defined(EFI32)
+#if EMBEDTHIS
+    #undef read
+    #undef write
+    #undef close
+    #define read _read
+    #define write _write
+    #define close _close
+#endif
+#endif
+
 #endif /* MBEDTLS_NET_C */
diff --git a/library/oid.c b/library/oid.c
index 1bd47d7..0a3fe3a 100644
--- a/library/oid.c
+++ b/library/oid.c
@@ -647,4 +647,8 @@ int mbedtls_oid_get_numeric_string( char *buf, size_t size,
     return( (int) ( size - n ) );
 }
 
+#if EMBEDTHIS
+#undef SAFE_SNPRINTF
+#endif
+
 #endif /* MBEDTLS_OID_C */
diff --git a/library/pem.c b/library/pem.c
index 541e870..48fb88a 100644
--- a/library/pem.c
+++ b/library/pem.c
@@ -44,10 +44,12 @@
 #define mbedtls_free       free
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 #if defined(MBEDTLS_PEM_PARSE_C)
 void mbedtls_pem_init( mbedtls_pem_context *ctx )
diff --git a/library/pk.c b/library/pk.c
index 10bd0a5..1af970d 100644
--- a/library/pk.c
+++ b/library/pk.c
@@ -39,10 +39,12 @@
 #include "mbedtls/ecdsa.h"
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * Initialise a mbedtls_pk_context
diff --git a/library/pk_wrap.c b/library/pk_wrap.c
index 712ad48..ec814f3 100644
--- a/library/pk_wrap.c
+++ b/library/pk_wrap.c
@@ -50,11 +50,13 @@
 #endif
 
 #if defined(MBEDTLS_PK_RSA_ALT_SUPPORT)
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
 #endif
+#endif
 
 #if defined(MBEDTLS_RSA_C)
 static int rsa_can_do( mbedtls_pk_type_t type )
diff --git a/library/pkcs12.c b/library/pkcs12.c
index f1777eb..f80bdb3 100644
--- a/library/pkcs12.c
+++ b/library/pkcs12.c
@@ -47,10 +47,12 @@
 #include "mbedtls/des.h"
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 static int pkcs12_parse_pbe_params( mbedtls_asn1_buf *params,
                                     mbedtls_asn1_buf *salt, int *iterations )
diff --git a/library/pkparse.c b/library/pkparse.c
index bddcf5d..c8d7fb5 100644
--- a/library/pkparse.c
+++ b/library/pkparse.c
@@ -61,10 +61,12 @@
 #endif
 
 #if defined(MBEDTLS_FS_IO)
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * Load all data from a file into a given buffer.
diff --git a/library/ripemd160.c b/library/ripemd160.c
index a55cc3e..eb6463c 100644
--- a/library/ripemd160.c
+++ b/library/ripemd160.c
@@ -69,10 +69,12 @@
 }
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 void mbedtls_ripemd160_init( mbedtls_ripemd160_context *ctx )
 {
@@ -461,4 +463,17 @@ int mbedtls_ripemd160_self_test( int verbose )
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS || 1
+#undef F
+#undef K
+#undef F1
+#undef F2
+#undef F3
+#undef F4
+#undef F5
+#undef P
+#undef S
+#endif
+
+
 #endif /* MBEDTLS_RIPEMD160_C */
diff --git a/library/sha1.c b/library/sha1.c
index 8c77cba..f6394ca 100644
--- a/library/sha1.c
+++ b/library/sha1.c
@@ -47,10 +47,12 @@
 
 #if !defined(MBEDTLS_SHA1_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (big endian)
@@ -445,4 +447,11 @@ exit:
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS || 1
+#undef F
+#undef P
+#undef R
+#undef S
+#endif
+
 #endif /* MBEDTLS_SHA1_C */
diff --git a/library/sha256.c b/library/sha256.c
index 4e82c0b..ac2826b 100644
--- a/library/sha256.c
+++ b/library/sha256.c
@@ -47,10 +47,12 @@
 
 #if !defined(MBEDTLS_SHA256_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (big endian)
@@ -131,6 +133,9 @@ void mbedtls_sha256_starts( mbedtls_sha256_context *ctx, int is224 )
 }
 
 #if !defined(MBEDTLS_SHA256_PROCESS_ALT)
+#if EMBEDTHIS
+#define K K256
+#endif
 static const uint32_t K[] =
 {
     0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
@@ -442,4 +447,18 @@ exit:
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#undef P
+#undef R
+#undef SHR
+#undef ROTR
+#undef S0
+#undef S1
+#undef S2
+#undef S3
+#undef F0
+#undef F1
+#undef K
+#endif
+
 #endif /* MBEDTLS_SHA256_C */
diff --git a/library/sha512.c b/library/sha512.c
index af610bb..caca8f7 100644
--- a/library/sha512.c
+++ b/library/sha512.c
@@ -53,10 +53,12 @@
 
 #if !defined(MBEDTLS_SHA512_ALT)
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 64-bit integer manipulation macros (big endian)
@@ -92,6 +94,9 @@ static void mbedtls_zeroize( void *v, size_t n ) {
 /*
  * Round constants
  */
+#if EMBEDTHIS
+#define K K512
+#endif
 static const uint64_t K[80] =
 {
     UL64(0x428A2F98D728AE22),  UL64(0x7137449123EF65CD),
@@ -497,4 +502,18 @@ exit:
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#undef P
+#undef R
+#undef SHR
+#undef ROTR
+#undef S0
+#undef S1
+#undef S2
+#undef S3
+#undef F0
+#undef F1
+#undef K
+#endif
+
 #endif /* MBEDTLS_SHA512_C */
diff --git a/library/ssl_ciphersuites.c b/library/ssl_ciphersuites.c
index 8bad7ab..6e69348 100644
--- a/library/ssl_ciphersuites.c
+++ b/library/ssl_ciphersuites.c
@@ -1682,6 +1682,11 @@ const int *mbedtls_ssl_list_ciphersuites( void )
 #define MAX_CIPHERSUITES    sizeof( ciphersuite_definitions     ) /         \
                             sizeof( ciphersuite_definitions[0]  )
 static int supported_ciphersuites[MAX_CIPHERSUITES];
+
+#if EMBEDTHIS
+#define supported_init suites_supported_init
+#endif
+
 static int supported_init = 0;
 
 const int *mbedtls_ssl_list_ciphersuites( void )
@@ -1834,4 +1839,8 @@ int mbedtls_ssl_ciphersuite_uses_psk( const mbedtls_ssl_ciphersuite_t *info )
 }
 #endif /* MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED */
 
+#if EMBEDTHIS
+#undef supported_init
+#endif
+
 #endif /* MBEDTLS_SSL_TLS_C */
diff --git a/library/ssl_cli.c b/library/ssl_cli.c
index 5a9c432..d0ddf6c 100644
--- a/library/ssl_cli.c
+++ b/library/ssl_cli.c
@@ -48,11 +48,32 @@
 #endif
 
 #if defined(MBEDTLS_SSL_SESSION_TICKETS)
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
 #endif
+#endif
+
+#if EMBEDTHIS
+#define ssl_parse_renegotiation_info cli_ssl_parse_renegotiation_info
+#define ssl_parse_max_fragment_length_ext cli_ssl_parse_max_fragment_length_ext
+#define ssl_parse_truncated_hmac_ext cli_ssl_parse_truncated_hmac_ext
+#define ssl_parse_encrypt_then_mac_ext cli_ssl_parse_encrypt_then_mac_ext
+#define ssl_parse_extended_ms_ext cli_ssl_parse_extended_ms_ext
+#define ssl_parse_session_ticket_ext cli_ssl_parse_session_ticket_ext
+#define ssl_parse_alpn_ext cli_ssl_parse_alpn_ext
+#define ssl_write_truncated_hmac_ext cli_ssl_write_truncated_hmac_ext
+#define ssl_write_encrypt_then_mac_ext cli_ssl_write_encrypt_then_mac_ext
+#define ssl_write_extended_ms_ext cli_ssl_write_extended_ms_ext
+#define ssl_write_session_ticket_ext cli_ssl_write_session_ticket_ext
+#define ssl_write_renegotiation_ext cli_ssl_write_renegotiation_ext
+#define ssl_write_max_fragment_length_ext cli_ssl_write_max_fragment_length_ext
+#define ssl_write_supported_point_formats_ext cli_ssl_write_supported_point_formats_ext
+#define ssl_write_alpn_ext cli_ssl_write_alpn_ext
+#define ssl_get_ecdh_params_from_cert cli_ssl_get_ecdh_params_from_cert
+#endif
 
 #if defined(MBEDTLS_SSL_SERVER_NAME_INDICATION)
 static void ssl_write_hostname_ext( mbedtls_ssl_context *ssl,
@@ -3067,4 +3088,24 @@ int mbedtls_ssl_handshake_client_step( mbedtls_ssl_context *ssl )
 
     return( ret );
 }
+
+#if EMBEDTHIS
+#undef ssl_parse_renegotiation_info
+#undef ssl_parse_max_fragment_length_ext
+#undef ssl_parse_truncated_hmac_ext
+#undef ssl_parse_encrypt_then_mac_ext
+#undef ssl_parse_extended_ms_ext
+#undef ssl_parse_session_ticket_ext
+#undef ssl_parse_alpn_ext
+#undef ssl_write_truncated_hmac_ext
+#undef ssl_write_encrypt_then_mac_ext
+#undef ssl_write_extended_ms_ext
+#undef ssl_write_session_ticket_ext
+#undef ssl_write_renegotiation_ext
+#undef ssl_write_max_fragment_length_ext
+#undef ssl_write_supported_point_formats_ext
+#undef ssl_write_alpn_ext
+#undef ssl_get_ecdh_params_from_cert
+#endif
+
 #endif /* MBEDTLS_SSL_CLI_C */
diff --git a/library/ssl_cookie.c b/library/ssl_cookie.c
index 7e0c573..d391ff5 100644
--- a/library/ssl_cookie.c
+++ b/library/ssl_cookie.c
@@ -43,10 +43,12 @@
 
 #include <string.h>
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * If DTLS is in use, then at least one of SHA-1, SHA-256, SHA-512 is
diff --git a/library/ssl_srv.c b/library/ssl_srv.c
index ca1e7b8..c21404c 100644
--- a/library/ssl_srv.c
+++ b/library/ssl_srv.c
@@ -50,11 +50,33 @@
 #endif
 
 #if defined(MBEDTLS_SSL_SESSION_TICKETS)
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
 #endif
+#endif
+
+#if EMBEDTHIS
+#define ssl_parse_renegotiation_info srv_ssl_parse_renegotiation_info
+#define ssl_parse_max_fragment_length_ext srv_ssl_parse_max_fragment_length_ext
+#define ssl_parse_truncated_hmac_ext srv_ssl_parse_truncated_hmac_ext
+#define ssl_parse_encrypt_then_mac_ext srv_ssl_parse_encrypt_then_mac_ext
+#define ssl_parse_extended_ms_ext srv_ssl_parse_extended_ms_ext
+#define ssl_parse_session_ticket_ext srv_ssl_parse_session_ticket_ext
+#define ssl_parse_alpn_ext srv_ssl_parse_alpn_ext
+#define ssl_write_truncated_hmac_ext srv_ssl_write_truncated_hmac_ext
+#define ssl_write_encrypt_then_mac_ext srv_ssl_write_encrypt_then_mac_ext
+#define ssl_write_extended_ms_ext srv_ssl_write_extended_ms_ext
+#define ssl_write_session_ticket_ext srv_ssl_write_session_ticket_ext
+#define ssl_write_renegotiation_ext srv_ssl_write_renegotiation_ext
+#define ssl_write_max_fragment_length_ext srv_ssl_write_max_fragment_length_ext
+#define ssl_write_supported_point_formats_ext srv_ssl_write_supported_point_formats_ext
+#define ssl_write_alpn_ext srv_ssl_write_alpn_ext
+#define ssl_get_ecdh_params_from_cert srv_ssl_get_ecdh_params_from_cert
+#endif
+
 
 #if defined(MBEDTLS_SSL_DTLS_HELLO_VERIFY)
 int mbedtls_ssl_set_client_transport_id( mbedtls_ssl_context *ssl,
@@ -3716,4 +3738,24 @@ int mbedtls_ssl_handshake_server_step( mbedtls_ssl_context *ssl )
 
     return( ret );
 }
+
+#if EMBEDTHIS
+#undef ssl_parse_renegotiation_info
+#undef ssl_parse_max_fragment_length_ext
+#undef ssl_parse_truncated_hmac_ext
+#undef ssl_parse_encrypt_then_mac_ext
+#undef ssl_parse_extended_ms_ext
+#undef ssl_parse_session_ticket_ext
+#undef ssl_parse_alpn_ext
+#undef ssl_write_truncated_hmac_ext
+#undef ssl_write_encrypt_then_mac_ext
+#undef ssl_write_extended_ms_ext
+#undef ssl_write_session_ticket_ext
+#undef ssl_write_renegotiation_ext
+#undef ssl_write_max_fragment_length_ext
+#undef ssl_write_supported_point_formats_ext
+#undef ssl_write_alpn_ext
+#undef ssl_get_ecdh_params_from_cert
+#endif
+
 #endif /* MBEDTLS_SSL_SRV_C */
diff --git a/library/ssl_ticket.c b/library/ssl_ticket.c
index 0e27900..77feec0 100644
--- a/library/ssl_ticket.c
+++ b/library/ssl_ticket.c
@@ -40,9 +40,11 @@
 #include <string.h>
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * Initialze context
diff --git a/library/ssl_tls.c b/library/ssl_tls.c
index 14ee521..92ef1f6 100644
--- a/library/ssl_tls.c
+++ b/library/ssl_tls.c
@@ -55,9 +55,11 @@
 #endif
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /* Length of the "epoch" field in the record header */
 static inline size_t ssl_ep_len( const mbedtls_ssl_context *ssl )
diff --git a/library/x509.c b/library/x509.c
index ffc3d6c..a55c19b 100644
--- a/library/x509.c
+++ b/library/x509.c
@@ -1021,4 +1021,8 @@ int mbedtls_x509_self_test( int verbose )
 
 #endif /* MBEDTLS_SELF_TEST */
 
+#if EMBEDTHIS
+#undef SAFE_SNPRINTF
+#endif
+
 #endif /* MBEDTLS_X509_USE_C */
diff --git a/library/x509_crl.c b/library/x509_crl.c
index 125a773..68c4f51 100644
--- a/library/x509_crl.c
+++ b/library/x509_crl.c
@@ -66,10 +66,12 @@
 #include <stdio.h>
 #endif
 
+#if !EMBEDTHIS
 /* Implementation that should never be optimized out by the compiler */
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  *  Version  ::=  INTEGER  {  v1(0), v2(1)  }
@@ -718,4 +720,10 @@ void mbedtls_x509_crl_free( mbedtls_x509_crl *crl )
     while( crl_cur != NULL );
 }
 
+#if EMBEDTHIS
+#undef SAFE_SNPRINTF
+#undef BEFORE_COLON
+#undef BC
+#endif
+
 #endif /* MBEDTLS_X509_CRL_PARSE_C */
diff --git a/library/x509_crt.c b/library/x509_crt.c
index f6879dd..503affe 100644
--- a/library/x509_crt.c
+++ b/library/x509_crt.c
@@ -76,9 +76,11 @@
 #endif
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * Default profile
@@ -2345,4 +2347,10 @@ void mbedtls_x509_crt_free( mbedtls_x509_crt *crt )
     while( cert_cur != NULL );
 }
 
+#if EMBEDTHIS
+#undef SAFE_SNPRINTF
+#undef BEFORE_COLON
+#undef BC
+#endif
+
 #endif /* MBEDTLS_X509_CRT_PARSE_C */
diff --git a/library/x509_csr.c b/library/x509_csr.c
index dbf659b..8dd1582 100644
--- a/library/x509_csr.c
+++ b/library/x509_csr.c
@@ -61,9 +61,11 @@
 #endif
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  *  Version  ::=  INTEGER  {  v1(0)  }
@@ -414,4 +416,10 @@ void mbedtls_x509_csr_free( mbedtls_x509_csr *csr )
     mbedtls_zeroize( csr, sizeof( mbedtls_x509_csr ) );
 }
 
+#if EMBEDTHIS
+#undef SAFE_SNPRINTF
+#undef BEFORE_COLON
+#undef BC
+#endif
+
 #endif /* MBEDTLS_X509_CSR_PARSE_C */
diff --git a/library/x509write_crt.c b/library/x509write_crt.c
index 9041d44..2a89e0a 100644
--- a/library/x509write_crt.c
+++ b/library/x509write_crt.c
@@ -45,9 +45,11 @@
 #endif /* MBEDTLS_PEM_WRITE_C */
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 void mbedtls_x509write_crt_init( mbedtls_x509write_cert *ctx )
 {
diff --git a/library/x509write_csr.c b/library/x509write_csr.c
index 0b9a285..3674eea 100644
--- a/library/x509write_csr.c
+++ b/library/x509write_csr.c
@@ -44,9 +44,11 @@
 #endif
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 void mbedtls_x509write_csr_init( mbedtls_x509write_csr *ctx )
 {
diff --git a/library/xtea.c b/library/xtea.c
index fe0a350..95cd700 100644
--- a/library/xtea.c
+++ b/library/xtea.c
@@ -43,9 +43,11 @@
 #if !defined(MBEDTLS_XTEA_ALT)
 
 /* Implementation that should never be optimized out by the compiler */
+#if !EMBEDTHIS
 static void mbedtls_zeroize( void *v, size_t n ) {
     volatile unsigned char *p = v; while( n-- ) *p++ = 0;
 }
+#endif
 
 /*
  * 32-bit integer manipulation macros (big endian)
